//
//  MoviesListRouter.swift
//  MovieStoreCleanArchitecture
//
//  Created by Achraf Trabelsi on 9/27/18.
//  Copyright (c) 2018 Achraf TRABELSI. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol MoviesListRoutingLogic {
    func routeToAddMovie(segue: UIStoryboardSegue?)
}

protocol MoviesListDataPassing {
    var dataStore: MoviesListDataStore? { get }
}

class MoviesListRouter: NSObject, MoviesListRoutingLogic, MoviesListDataPassing {
    
    weak var viewController: MoviesListViewController?
    var dataStore: MoviesListDataStore?
    
    // MARK: Routing
    
    func routeToAddMovie(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! AddMovieViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToAddMovie(source: dataStore!, destination: &destinationDS)
        } else {
            let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: "AddMovieViewController") as! AddMovieViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToAddMovie(source: dataStore!, destination: &destinationDS)
            navigateToAddMovie(source: self.viewController!, destination: destinationVC)
        }
    }
    
    // MARK: Navigation
    
    func navigateToAddMovie(source: MoviesListViewController, destination: AddMovieViewController) {
      source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    
    func passDataToAddMovie(source: MoviesListDataStore, destination: inout AddMovieDataStore) {
      // Nothing to pass for now.
    }
}
