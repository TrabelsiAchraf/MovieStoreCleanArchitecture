//
//  MoviesListPresenter.swift
//  MovieStoreCleanArchitecture
//
//  Created by Achraf Trabelsi on 9/27/18.
//  Copyright (c) 2018 Achraf TRABELSI. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MoviesListPresentationLogic {
    func presentFatechedMovies(response: MoviesList.Fetch.Response)
}

class MoviesListPresenter: MoviesListPresentationLogic {
    
    weak var viewController: MoviesListDisplayLogic?
    
    let dateFormatter: DateFormatter = {
        let dateFormatter = DateFormatter()
        dateFormatter.dateStyle = .short
        dateFormatter.timeStyle = .none
        return dateFormatter
    }()
    
    
    // MARK: Fetch movies
    
    func presentFatechedMovies(response: MoviesList.Fetch.Response) {
        var displayedMovies: [MoviesList.Fetch.ViewModel.DisplayedMovie] = []
        for movie in response.movies {
            let date = dateFormatter.string(from: Date(timeIntervalSince1970: TimeInterval(movie.releaseDate)))
            let rating = String(format: "%.2f", movie.rating)
            let details = "* Date : \(date) - Rating : \(rating)"
            let displayedMovie = MoviesList.Fetch.ViewModel.DisplayedMovie(title: movie.title, details: details)
            displayedMovies.append(displayedMovie)
        }
        let viewModel = MoviesList.Fetch.ViewModel(displayedMovies: displayedMovies)
        self.viewController?.displayFetchedMovies(viewModel: viewModel)
    }
}
