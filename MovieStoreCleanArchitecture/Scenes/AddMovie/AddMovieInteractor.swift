//
//  AddMovieInteractor.swift
//  MovieStoreCleanArchitecture
//
//  Created by Achraf TRABELSI on 17/09/2018.
//  Copyright (c) 2018 Achraf TRABELSI. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AddMovieBusinessLogic {
    func addMovie(request: AddMovie.Add.Request)
}

protocol AddMovieDataStore {
    
}

class AddMovieInteractor: AddMovieBusinessLogic, AddMovieDataStore {
    
    var presenter: AddMoviePresentationLogic?
    var moviesWorker = MoviesWorker(moviesStore: MovieMemoryStore())
    
    // MARK: Add movie
    
    func addMovie(request: AddMovie.Add.Request) {
        let movieToAdd = buildMovieFromFields(request)
        moviesWorker.addMovie(movieToAdd: movieToAdd) { (movie: Movie?) in
            let response = AddMovie.Add.Response(movie: movie)
            self.presenter?.presentAddMovie(response: response)
        }
    }
    
    private func buildMovieFromFields(_ movieFromFields: AddMovie.Add.Request) -> Movie {
        return Movie(id: movieFromFields.movieFromFields.id, title: movieFromFields.movieFromFields.title, overview: movieFromFields.movieFromFields.overview, releaseDate: movieFromFields.movieFromFields.releaseDate, rating: movieFromFields.movieFromFields.rating, producer: movieFromFields.movieFromFields.producer)
    }
}
